{"version":3,"sources":["writtenRedux/basketReducer.js","writtenRedux/cardInfoReducer.js","writtenRedux/state.js","components/FirstPage/FirstPage.jsx","components/FirstPage/FirstPageContainer.jsx","components/SecondPage/SecondPage.jsx","api/api.js","components/SecondPage/SecondPageContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["ADD_ITEM","UPDATE_COUNT_ITEM","addItemToBasket","key","name","price","image","type","getTotalPrice","collection","store","getState","basket","map","element","totalPrice","result","i","length","basketReducer","state","action","some","count","filter","change","ADD_CARD_INFO","CHANGE_NUMBER","numbers","numberIndex","cardInfoReducer","formBackgroundColor","formTextColor","borderColor","formBorderColor","bankLogoDisplay","bankLogoSrc","brandLogoDisplay","brandLogoSrc","_state","products","cardInfo","this","rerenderPage","observer","rerenderEntireTree","dispatch","window","FirstPage","props","className","to","FirstPageContainer","addItem","buildItemCard","src","alt","onClick","appState","React","Component","SecondPage","style","background","color","display","onChange","value","getCardContainer","currentTarget","placeholder","itemCards","instance","axios","baseURL","cardAPI","numberOfCard","slice","get","then","response","data","formBankLogoBigSvg","formBrandLogoSvg","brandLogoOriginalSvg","addCardInfo","catch","error","console","SecondPageContainer","setState","currentValue","changeCount","changeCountItem","creatorCardItems","array","marginRight","width","prevProps","prevState","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.863fc2df.chunk.js","sourcesContent":["import store from \"./state\";\r\n\r\nconst ADD_ITEM = \"ADD_ITEM\";\r\nconst UPDATE_COUNT_ITEM = \"UPDATE_COUNT_ITEM\";\r\n\r\n\r\nconst basketReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_ITEM:\r\n            return [\r\n                ...state.some(element => {\r\n                    return element.key === action.key\r\n                }) ? [...state.map(element => {\r\n                    if (element.key === action.key) {\r\n                        return {...element, count: element.count += 1, totalPrice: element.price * element.count}\r\n                    } else return element;\r\n                })] : [...state, {\r\n                    key: action.key,\r\n                    name: action.name,\r\n                    price: action.price,\r\n                    image: action.image,\r\n                    count: 1,\r\n                    totalPrice: action.price,\r\n                }]\r\n            ]\r\n        case UPDATE_COUNT_ITEM:\r\n            return state.filter(element => {\r\n                if (element.key === action.key) {\r\n                    let result = element.count + action.change;\r\n                    return (result > 0);\r\n                } else return true;\r\n            }).map(element => {\r\n                if (element.key === action.key) {\r\n                    let result = element.count + action.change;\r\n                    return {...element, count: result, totalPrice: result * element.price}\r\n                } else return element;\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addItemToBasket = (key, name, price, image) => {\r\n    return {\r\n        type: ADD_ITEM, key, name, price, image\r\n    }\r\n}\r\n\r\nexport const changeCountItem = (key, change) => {\r\n    return {\r\n        type: UPDATE_COUNT_ITEM, key, change\r\n    }\r\n}\r\n\r\nexport const getTotalPrice = () => {\r\n    let collection = store.getState().basket.map(element => {\r\n        return element.totalPrice\r\n    });\r\n    let result = 0;\r\n    for (let i =0; i < collection.length; i++) {\r\n        result += collection[i];\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default basketReducer;","const ADD_CARD_INFO = \"ADD_CARD_INFO\";\r\nconst CHANGE_NUMBER = \"CHANGE_NUMBER\";\r\n\r\nconst numbers = [\r\n    '408396',\r\n    '220488',\r\n    '406372',\r\n    '400079',\r\n    '220022',\r\n    '412776',\r\n    '401173',\r\n    '437772',\r\n    '403780',\r\n    '431854',\r\n    '410323',\r\n    '220001',\r\n    '403184',\r\n    '418384',\r\n    '220006',\r\n    '413047',\r\n    '411676',\r\n    '220003',\r\n    '402107',\r\n    '415025',\r\n    '400812',\r\n]\r\n\r\nlet numberIndex = 0;\r\n\r\nconst cardInfoReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_CARD_INFO: {\r\n            return {\r\n                formBackgroundColor: action.formBackgroundColor,\r\n                formTextColor: action.formTextColor,\r\n                borderColor: action.borderColor,\r\n                formBorderColor: action.formBorderColor,\r\n                bankLogoDisplay: action.bankLogoDisplay,\r\n                bankLogoSrc: action.bankLogoSrc,\r\n                brandLogoDisplay: action.brandLogoDisplay,\r\n                brandLogoSrc: action.brandLogoSrc,\r\n                numbers: action.numbers\r\n            }\r\n        }\r\n\r\n        case CHANGE_NUMBER: {\r\n            numberIndex = (numberIndex + 1) % numbers.length\r\n            return {\r\n                ...state,\r\n                numbers: numbers[numberIndex]\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeNumber = () => {\r\n    return {type: CHANGE_NUMBER}\r\n}\r\n\r\nexport const addCardInfo = (formBackgroundColor, formTextColor, borderColor, formBorderColor, bankLogoDisplay, bankLogoSrc, brandLogoDisplay, brandLogoSrc, numbers) => {\r\n    return {\r\n        type: ADD_CARD_INFO, formBackgroundColor, formTextColor, borderColor, formBorderColor, bankLogoDisplay, bankLogoSrc, brandLogoDisplay, brandLogoSrc, numbers\r\n    }\r\n}\r\n\r\nexport default cardInfoReducer;","// Написал свой стейт менеджмент, чтобы стек использованных технологий оставался неизменным.\r\nimport basketReducer from \"./basketReducer\";\r\nimport cardInfoReducer from \"./cardInfoReducer\";\r\n\r\nlet store = {\r\n    _state: {\r\n        products: [\r\n            {\r\n                name: \"Item1\",\r\n                price: 101,\r\n                image: \"http://placehold.it/200x120\",\r\n                key: 1,\r\n            },\r\n\r\n            {\r\n                name: \"Item2\",\r\n                price: 102,\r\n                image: \"http://placehold.it/200x120\",\r\n                key: 2,\r\n            },\r\n\r\n            {\r\n                name: \"Item3\",\r\n                price: 103,\r\n                image: \"http://placehold.it/200x120\",\r\n                key: 3,\r\n            },\r\n\r\n            {\r\n                name: \"Item4\",\r\n                price: 104,\r\n                image: \"http://placehold.it/200x120\",\r\n                key: 4,\r\n            },\r\n\r\n            {\r\n                name: \"Item5\",\r\n                price: 105,\r\n                image: \"http://placehold.it/200x120\",\r\n                key: 5,\r\n            },\r\n\r\n            {\r\n                name: \"Item6\",\r\n                price: 100,\r\n                image: \"http://placehold.it/200x120\",\r\n                key: 6,\r\n            },\r\n\r\n        ],\r\n        basket: [],\r\n        cardInfo: {\r\n            formBackgroundColor: null,\r\n            formTextColor: null,\r\n            borderColor: null,\r\n            formBorderColor: null,\r\n            bankLogoDisplay: null,\r\n            bankLogoSrc: null,\r\n            brandLogoDisplay: null,\r\n            brandLogoSrc: null,\r\n            numbers: '408396',\r\n        }\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    rerenderPage(observer) {\r\n        this.rerenderEntireTree = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n        this._state.basket = basketReducer(this._state.basket, action);\r\n        this._state.cardInfo = cardInfoReducer(this._state.cardInfo, action);\r\n        this.rerenderEntireTree(this._state);\r\n    }\r\n}\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction FirstPage(props) {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"fistPage__basket\">\r\n                <NavLink className=\"btn btn--blue\" to=\"/second_page\">Корзина</NavLink>\r\n            </div>\r\n\r\n            <div className=\"fistPage__products\">\r\n                {props.products}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FirstPage;","import React from \"react\";\r\nimport FirstPage from \"./FirstPage\";\r\nimport {addItemToBasket} from \"../../writtenRedux/basketReducer\";\r\n\r\nclass FirstPageContainer extends React.Component {\r\n\r\n    addItem = (key, name, price, image) => {\r\n        this.props.dispatch(addItemToBasket(key, name, price, image))\r\n    }\r\n\r\n    buildItemCard = (products) => {\r\n        if (products.length !== 0) {\r\n            return products.map(element => {\r\n                return (\r\n                    <div className=\"fistPage__item\" key={element.key}>\r\n                        <img src={element.image} alt={element.name + \"_image\"} className=\"fistPage__item-img\" />\r\n                        <p className=\"fistPage__item-name\">{element.name}</p>\r\n                        <p className=\"fistPage__item-price\">{`${element.price} $`}</p>\r\n                        <button onClick={() => this.addItem(element.key, element.name, element.price, element.image)} className=\"btn btn--red btn--small btn--rounded\">Add to card</button>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <FirstPage products={this.buildItemCard(this.props.appState.products)}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FirstPageContainer;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {getTotalPrice} from \"../../writtenRedux/basketReducer\";\r\nimport {changeNumber} from \"../../writtenRedux/cardInfoReducer\";\r\n\r\nfunction SecondPage(props) {\r\n\r\n    let getCard = (value) => {\r\n        props.getCardContainer(value.currentTarget.value)\r\n    }\r\n\r\n    let nextCardNumber = () => {\r\n        props.dispatch(changeNumber());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"secondPage__buttonBack\">\r\n                <NavLink to=\"/\" className=\"btn--rounded btn btn--small btn--blue\">Back</NavLink>\r\n            </div>\r\n\r\n            <div className=\"secondPage__wrapper\">\r\n                <div className=\"secondPage__cards\">\r\n                    <div className=\"secondPage__front secondPage__card\" style={{background: props.appState.cardInfo.formBackgroundColor, color: props.appState.cardInfo.formTextColor, borderColor: props.appState.cardInfo.formBorderColor}}>\r\n                        <img src={props.appState.cardInfo.bankLogoSrc} style={{display: props.appState.cardInfo.bankLogoDisplay}} className=\"secondPage__bank-logo\" alt=\"Bank_logo\"/>\r\n                            <img src={props.appState.cardInfo.brandLogoSrc} style={{display: props.appState.cardInfo.brandLogoDisplay}} className=\"secondPage__brand-logo\" alt=\"Brand_logo\"/>\r\n                                <div className=\"secondPage__fields\">\r\n                                    <input onChange={getCard} className=\"secondPage__field secondPage__number\" type=\"text\" placeholder=\"0000 0000 0000 0000\" value={props.appState.cardInfo.numbers}/>\r\n                                        <label className=\"secondPage__label\">Valid thru</label>\r\n                                        <input className=\"secondPage__field secondPage__expired\" style={{borderColor: props.appState.cardInfo.formBorderColor}} type=\"text\" placeholder=\"MM\"/>\r\n                                            <input className=\"secondPage__field secondPage__expired\" style={{borderColor: props.appState.cardInfo.formBorderColor}} type=\"text\" placeholder=\"YY\"/>\r\n                                </div>\r\n                    </div>\r\n                    <div className=\"secondPage__back secondPage__card\">\r\n                        <input className=\"secondPage__field secondPage__code\" style={{borderColor: props.appState.cardInfo.formBorderColor}} type=\"password\"/>\r\n                            <label className=\"secondPage__label\">Safety code</label>\r\n                    </div>\r\n                </div>\r\n                <p>\r\n                    <button onClick={nextCardNumber} className=\"btn--rounded btn btn--red\">Next card number</button>\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"secondPage__basket\">\r\n\r\n                {props.itemCards}\r\n\r\n                <div className=\"secondPage__basket-bottom\">\r\n                    <div className=\"secondPage__basket-totalPrice\">Total Price: {getTotalPrice()}$</div>\r\n                    <button className=\"btn--rounded btn btn--blue\">Buy</button>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SecondPage;","import * as axios from \"axios\";\r\nimport {addCardInfo} from \"../writtenRedux/cardInfoReducer\";\r\n\r\nconst API_KEY = \"20212faa7084e4ae54a37bc2f4163bd8\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.cardinfo.online\",\r\n})\r\n\r\nexport const cardAPI = {\r\n    getCardInfo(numbers, dispatch) {\r\n        let numberOfCard = numbers.slice(0, 6);\r\n        return instance.get(`?apiKey=${API_KEY}&input=${numberOfCard}`)\r\n            .then(response => {\r\n                return response.data\r\n            }).then(data => {\r\n                let formBackgroundColor = data.formBackgroundColor;\r\n                let formTextColor = data.formTextColor;\r\n                let borderColor = data.formBorderColor;\r\n                let formBorderColor = data.formBorderColor;\r\n                let bankLogoDisplay = data.formBankLogoBigSvg ? 'block' : 'none';\r\n                let bankLogoSrc = data.formBankLogoBigSvg;\r\n                let brandLogoDisplay = data.formBrandLogoSvg || data.brandLogoOriginalSvg ? 'block' : 'none';\r\n                let brandLogoSrc = data.formBrandLogoSvg || data.brandLogoOriginalSvg;\r\n                dispatch(addCardInfo(formBackgroundColor, formTextColor, borderColor, formBorderColor, bankLogoDisplay, bankLogoSrc, brandLogoDisplay, brandLogoSrc, numberOfCard))\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n            })\r\n    }\r\n}","import React from \"react\";\r\nimport SecondPage from \"./SecondPage\";\r\nimport {changeCountItem} from \"../../writtenRedux/basketReducer\";\r\nimport {cardAPI} from \"../../api/api\";\r\n\r\nclass SecondPageContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentValue: null,\r\n        };\r\n    }\r\n\r\n    getCardContainer = (value) => {\r\n        cardAPI.getCardInfo(value, this.props.dispatch);\r\n        this.setState({...this.state, currentValue: value});\r\n    }\r\n\r\n    componentDidMount(props) {\r\n        this.getCardContainer(this.props.appState.cardInfo.numbers)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.currentValue !== this.props.appState.cardInfo.numbers) {\r\n            this.getCardContainer(this.props.appState.cardInfo.numbers)\r\n            this.setState({...this.state, currentValue: this.props.appState.cardInfo.numbers});\r\n        }\r\n    }\r\n\r\n    changeCount = (key, change) => {\r\n        this.props.dispatch(changeCountItem(key, change))\r\n    }\r\n\r\n    creatorCardItems = (array) => {\r\n        return array.map(element => {\r\n            return (\r\n                    <div className=\"secondPage__item\">\r\n                        <div className=\"secondPage__name\">{element.name}</div>\r\n                        <div className=\"secondPage__itemCount\">\r\n                            <span onClick={() => this.changeCount(element.key, -1)} className=\"btn btn--small btn--red\" style={{marginRight: \".5rem\"}}>-</span>\r\n                            <span className=\"btn btn--small btn--rounded\" style={{marginRight: \".5rem\", width: \"3rem\"}}>{element.count}</span>\r\n                            <span onClick={() => this.changeCount(element.key, 1)} className=\"btn btn--small btn--blue\">+</span>\r\n                        </div>\r\n                        <div className=\"secondPage__price\">{element.totalPrice}$</div>\r\n                    </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <SecondPage getCardContainer={this.getCardContainer} itemCards={this.creatorCardItems(this.props.appState.basket)} appState={this.props.appState} dispatch={this.props.dispatch}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SecondPageContainer;","import './App.scss';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport FirstPageContainer from \"./components/FirstPage/FirstPageContainer\";\nimport SecondPageContainer from \"./components/SecondPage/SecondPageContainer\";\n\nfunction App(props) {\n  return (\n      <HashRouter>\n          <div className=\"container\">\n              <Route exact path=\"/\" render={() => <FirstPageContainer appState={props.appState} dispatch={props.dispatch}/> } />\n              <Route exact path=\"/second_page\" render={() => <SecondPageContainer appState={props.appState} dispatch={props.dispatch}/> } />\n          </div>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from \"./writtenRedux/state\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App appState={store.getState()} dispatch={store.dispatch.bind(store)} />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree(store.getState());\nstore.rerenderPage(rerenderEntireTree);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}